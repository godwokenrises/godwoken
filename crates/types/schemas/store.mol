import blockchain;
import godwoken;

vector OutPointVec <OutPoint>;

struct NumberHash {
    number:         Uint64,
    block_hash:     Byte32,
}

struct L2BlockCommittedInfo {
    number:         Uint64,
    block_hash:     Byte32,
    transaction_hash: Byte32,
}

array TransactionKey [byte; 36];

struct TransactionInfo {
    block_number:   Uint64,
    key:            TransactionKey,
}

table LogItem {
    account_id: Uint32,
    service_flag: byte,
    data: Bytes,
}

vector LogItemVec <LogItem>;

table TxReceipt {
    tx_witness_hash: Byte32,
    post_state: AccountMerkleState,
    read_data_hashes: Byte32Vec,
    logs: LogItemVec,
}

array WithdrawalKey [byte; 36];

struct WithdrawalInfo {
    block_number:   Uint64,
    key:            WithdrawalKey,
}

table WithdrawalReceipt {
    post_state: AccountMerkleState,
}

table WithdrawalRequestExtra {
    request: WithdrawalRequest,
    owner_lock: ScriptOpt,
}

struct SMTBranchKey {
    height: byte,
    node_key: Byte32,
}

table SMTBranchNode {
    left: SMTMergeValue,
    right: SMTMergeValue,
}

union SMTMergeValue {
    SMTValue,
    SMTMergeWithZero,
}

struct SMTMergeWithZero {
    base_node: Byte32,
    zero_bits: Byte32,
    zero_count: byte,
}

struct SMTValue {
    value: Byte32,
}
