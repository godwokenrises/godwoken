name: Dispatch integration test from PR

on:
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened, synchronize]

jobs:
  from-comment:
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/itest')
    runs-on: ubuntu-latest
    steps:
      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.event.sender.login }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate gw-bot token
        id: generate_gw_bot_token
        uses: wow-actions/use-app-token@v1
        with:
          app_id: ${{ secrets.GW_BOT_APP_ID }}
          private_key: ${{ secrets.GW_BOT_PRIVATE_KEY }}

      # restrict /itest to users with admin or write permission
      # see https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#get-repository-permissions-for-a-user
      - name: Dispatch if user does have correct permission
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        id: dispatch
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_gw_bot_token.outputs.token }}
          script: |
            const dispatch = {
              comment_body: `${{ github.event.comment.body }}`,
              repo: context.repo,
              issue: context.issue,
            };
            const jsonDispatch = JSON.stringify(dispatch)
              .replace(/\\b/g, "\\\\b")
              .replace(/\\f/g, "\\\\f")
              .replace(/\\n/g, "\\\\n")
              .replace(/\\r/g, "\\\\r")
              .replace(/\\t/g, "\\\\t");

            const resp = await github.rest.actions.createWorkflowDispatch({
              owner: "nervosnetwork",
              repo: "godwoken-tests",
              workflow_id: "integration-test-chat-bot-v1.yml",
              ref: "develop",
              inputs: {
                dispatch: jsonDispatch,
              }
            });

            core.info(`${JSON.stringify(resp, null, 2)}`);

  from-pr:
    if: github.event.pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.event.sender.login }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate gw-bot token
        id: generate_gw_bot_token
        uses: wow-actions/use-app-token@v1
        with:
          app_id: ${{ secrets.GW_BOT_APP_ID }}
          private_key: ${{ secrets.GW_BOT_PRIVATE_KEY }}

      - name: Dispatch from pull request if user does have correct permission
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        uses: actions/github-script@v6
        id: dispatch
        with:
          github-token: ${{ steps.generate_gw_bot_token.outputs.token }}
          script: |
            const dispatch = {
              comment_body: "",
              repo: context.repo,
              issue: context.issue,
            };
            const jsonDispatch = JSON.stringify(dispatch)
              .replace(/\\b/g, "\\\\b")
              .replace(/\\f/g, "\\\\f")
              .replace(/\\n/g, "\\\\n")
              .replace(/\\r/g, "\\\\r")
              .replace(/\\t/g, "\\\\t");

            const resp = await github.rest.actions.createWorkflowDispatch({
              owner: "nervosnetwork",
              repo: "godwoken-tests",
              workflow_id: "integration-test-chat-bot-v1.yml",
              ref: "develop",
              inputs: {
                dispatch: jsonDispatch,
              }
            });

            core.info(`${JSON.stringify(resp, null, 2)}`);
