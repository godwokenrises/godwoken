name: Build and Test

on: [push, pull_request]

jobs:
  rustfmt-and-clippy:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Cache of Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ runner.arch }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-cargo-clippy

    - name: Install Rust components
      run: |
        cargo fmt --version || rustup component add rustfmt
        cargo clippy --version || rustup component add clippy
    - name: Check format
      run: cargo fmt --all -- --check --verbose
    - name: Cargo clippy check
      env:
        RUSTFLAGS: -D warnings
      run: cargo clippy --tests --all-features --all-targets

  
  rust-test:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache of Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ runner.arch }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-cargo-test

    - name: Cache of component.gwos-evm
      id: godwoken-polyjuice-cache
      uses: actions/cache@v3
      with:
        path: |
          gwos-evm/build/*generator*
          gwos-evm/build/*validator*
        key: component.gwos-evm-${{ hashFiles('gwos-evm/**') }}  
    - name: Build godwoken-polyjuice
      if: steps.godwoken-polyjuice-cache.outputs.cache-hit != 'true'
      working-directory: gwos-evm
      run: |
        test "$(moleculec --version)" = "Moleculec 0.7.2" \
        || cargo install moleculec --version 0.7.2 --force
        git submodule update --init --recursive --depth=1
        make all-via-docker

    - name: Test all targets
      run: RUST_BACKTRACE=1 cargo test --all-targets


  test-generate-example-config:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Cache of Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ runner.arch }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-cargo-build
    - name: Test TOML serialization
      run: cargo run --bin godwoken -- generate-example-config -o test.toml
