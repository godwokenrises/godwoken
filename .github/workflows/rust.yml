name: Rust

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install Rust components
      run: rustup component add rustfmt && rustup component add clippy
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - name: Install moleculec v0.7.2
      run: CARGO_TARGET_DIR=target/ cargo install moleculec --version 0.7.2
    - name: Install capsule
      env:
        CAPSULE_VERSION: v0.7.0
      run: curl -OL https://github.com/nervosnetwork/capsule/releases/download/${CAPSULE_VERSION}/capsule_${CAPSULE_VERSION}_x86_64-linux.tar.gz && tar xf capsule_${CAPSULE_VERSION}_x86_64-linux.tar.gz && echo `pwd`/capsule_${CAPSULE_VERSION}_x86_64-linux >> $GITHUB_PATH
    - name: Check format
      run: cargo fmt -- --check
    - name: Cargo clippy check
      env:
        RUSTFLAGS: -D warnings
      run: cargo clippy
    - name: Init submodules
      run: git submodule init && git submodule update -r && cd tests-deps/godwoken-scripts && git submodule init && git submodule update -r
    - name: Compile C contracts
      run: cd tests-deps/godwoken-scripts/c && make
    - uses: actions/cache@v2
      id: fetch-capsule-cache
      with:
        path: |
          tests-deps/godwoken-scripts/.tmp/capsule-cache.tar
        key: ${{ runner.os }}-capsule-cache-${{ hashFiles('contracts/Cargo.lock') }}
    - name: Restore capsule cache
      if: steps.fetch-capsule-cache.outputs.cache-hit == 'true'
      run: cd tests-deps/godwoken-scripts && tools/restore-capsule-cache.sh
    - name: Build Rust contracts
      run: cd tests-deps/godwoken-scripts && capsule build
    - name: Backup capsule cache
      if: steps.fetch-capsule-cache.outputs.cache-hit != 'true'
      run: cd tests-deps/godwoken-scripts && tools/backup-capsule-cache.sh
    - name: Tests
      run: cargo test --all-targets
