name: Rust

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install Rust components
      run: rustup component add rustfmt && rustup component add clippy
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - name: Install moleculec
      run: CARGO_TARGET_DIR=target/ cargo install moleculec --version 0.6.1
    - name: Install capsule
      run: CARGO_TARGET_DIR=target/ cargo install ckb-capsule --version 0.4.4
    - name: Check format
      run: cargo fmt -- --check
    - name: Check contracts format
      run: cd contracts && cargo fmt -- --check
    - name: Init submodules
      run: git submodule init && git submodule update -r
    - name: Compile C contracts
      run: cd c && make
    - uses: actions/cache@v2
      id: fetch-capsule-cache
      with:
        path: |
          /tmp/capsule-cache.tar
        key: ${{ runner.os }}-capsule-cache-${{ hashFiles('contracts/Cargo.lock') }}
    - name: Restore capsule cache
      if: steps.fetch-capsule-cache.outputs.cache-hit == 'true'
      run: tools/restore-capsule-cache.sh
    - name: Build Rust contracts
      run: capsule build
    - name: Backup capsule cache
      if: steps.fetch-capsule-cache.outputs.cache-hit != 'true'
      run: tools/backup-capsule-cache.sh
    - name: Tests
      run: cargo test
